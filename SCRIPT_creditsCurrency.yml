# ========================================
# Credits Currency / Economy
# Tyler J. Sawyer
# Simon Anguish
# Last Updated: 4/22/14
# ========================================
# 
# Credits Currency
# ----------------
#
# A custom Denizen-based economy scripting protocol that allows players to
# buy, sell, and trade items to NPCs designated as the 'vendor' assignment.
#
# Item buy/sell values can be customized in the appropriate NPC assignment 
# script. 
#
# NPCs can be customized to require a certain faction in order to speak to
# a particular player.
#
# NPCs may also be assigned the 'Auction' assignment to allow players to 
# sell unique or custom items obtained through the server (such as custom 
# boss loot) to other players for credits.
#
# Credits may be used to buy (almost) all items in the game.
#
# Players can also transfer credits to one another in trade for 
# specific items using the /credit transfer amt player command.
#
# See the individual commands below for comments and details.
# ========================================
#

"CreditsInitializer":
  type: world
  events:
    on player join:
    # Credit Check - See if a player has a credit flag.
    # If not, create one and set it equal to 0.
    - if <player.flag[CURRENCY_Credits]> == "null" {
      - flag player "CURRENCY_Credits:0" }
      
"CreditsCommands":
  type: world
  events:
    # Player Commands
    # credits command
    # Tells the player how many credits they have.
    # May also specify 'credits trade' to trade x credits to a player.
    # Usage:
    # /credits trade <amt> <playerName>
    on credits command:
    - if <context.args.get[1]> == null {
      - narrate "<yellow>You have <player.flag[CURRENCY_Credits]> credits in your wallet."
      }
    - if <context.args.get[1]> != null && <context.args.get[1]> != trade {
      - narrate "<red>Invalid Syntax for <gold>/credits trade<red> command."
      - narrate "<red>Usage<&co> <gold>/credits trade <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Gives the specified amount of credits to the specified player."
      - queue clear
      }
    - if <context.args.get[1]> == trade && <context.args.get[2]> == null {
      - narrate "<red>Invalid Syntax for <gold>/credits trade<red> command."
      - narrate "<red>Usage<&co> <gold>/credits trade <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Gives the specified amount of credits to the specified player."
      - queue clear
      }
    - if <context.args.get[1]> == trade && <context.args.get[2]> != null && <context.args.get[3]> == null {
      - narrate "<red>Invalid Syntax for <gold>/credits trade<red> command."
      - narrate "<red>Usage<&co> <gold>/credits trade <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Gives the specified amount of credits to the specified player."
      - queue clear
      }
    - if <context.args.get[1]> == trade && <context.args.get[2]> != null && <context.args.get[3]> != null {
      - if <context.args.get[3]> == <player.name> {
        - narrate "<red>You cannot trade credits to yourself!"
        - queue clear
        }
      - define creditAmt <context.args.get[2]>
      - define destcurrentAmt <p@<context.args.get[3]>.flag[CURRENCY_Credits]>
      - define destnewAmt <math.as_int:%destcurrentAmt%+%creditAmt%>
      - define srccurrentAmt <p@<player.name>.flag[CURRENCY_Credits]>
      - define srcnewAmt <math.as_int:%srccurrentAmt%-%creditAmt%>
      - flag <p@<context.args.get[3]>> "CURRENCY_Credits:%destnewAmt%"
      - flag <p@<player.name>> "CURRENCY_Credits:%srcnewAmt%"
      - narrate targets:<context.args.get[3]> "<yellow><player.name> has transferred <context.args.get[2]> credits to your wallet."
      - narrate "<yellow>You have transferred <context.args.get[2]> credits to <context.args.get[3]><&sq>s wallet."
      }
    # Admin Commands
    # CreditAdd command.
    # /creditadd <amt> <player>
    # Gives a <player> <amt> credits.
    on creditadd command:
    - if <player.name> != "Aayrl" && <player.name> != "Jennavb13" && <player.name> != "mtotho" && <player.name> != "lenois" {
      - narrate "<red>You may not use this command."
      - queue clear
      }
    - if <context.args.get[2]> == null || <context.args.get[1]> == null {
      - narrate "<red>Invalid Syntax for <gold>/creditadd<red> command."
      - narrate "<red>Usage<&co> <gold>/creditadd <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Adds specified amount of credits to a specified player<&sq>s wallet."
      - queue clear
      }
    - if <p@<context.args.get[2]>.is_online> == false {
      - narrate "<red><context.args.get[2]> is not online. Player must be online."
      - queue clear
      }
    - if <context.args.get[2]> != null {
      - define creditAmt <context.args.get[1]>
      - define currentAmt <p@<context.args.get[2]>.flag[CURRENCY_Credits]>
      - define newAmt <math.as_int:%currentAmt%+%creditAmt%>
      - flag <p@<context.args.get[2]>> "CURRENCY_Credits:%newAmt%"
      - narrate targets:<context.args.get[2]> "<yellow>Adding <context.args.get[1]> credits to your wallet."
      - narrate "<&7><&O>Giving <context.args.get[1]> credits to <context.args.get[2]>."
      }
    # Creditsub command.
    # /creditsub <amt> <player>
    # Takes <amt> credits from <player>.
    on creditsub command:
    - if <player.name> != "Aayrl" && <player.name> != "Jennavb13" && <player.name> != "mtotho" && <player.name> != "lenois" {
      - narrate "<red>You may not use this command."
      - queue clear
      }
    - if <context.args.get[2]> == null || <context.args.get[1]> == null {
      - narrate "<red>Invalid Syntax for <gold>/creditsub<red> command."
      - narrate "<red>Usage<&co> <gold>/creditsub <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Removes specified amount of credits from a specified player<&sq>s wallet."
      - queue clear
      }
    - if <p@<context.args.get[2]>.is_online> == false {
      - narrate "<red><context.args.get[2]> is not online. Player must be online."
      - queue clear
      }
    - if <context.args.get[2]> != null {
      - define creditAmt <context.args.get[1]>
      - define currentAmt <p@<context.args.get[2]>.flag[CURRENCY_Credits]>
      - define newAmt <math.as_int:%currentAmt%-%creditAmt%>
      - flag <p@<context.args.get[2]>> "CURRENCY_Credits:%newAmt%"
      - narrate targets:<context.args.get[2]> "<yellow>Removing <context.args.get[1]> credits from your wallet."
      - narrate "<&7><&O>Taking <context.args.get[1]> credits from <context.args.get[2]>."
      }
    # Creditset command.
    # /creditset <amt> <player>
    # Sets a <player> credit count to <amt>.
    on creditset command:
    - if <player.name> != "Aayrl" && <player.name> != "Jennavb13" && <player.name> != "mtotho" && <player.name> != "lenois" {
      - narrate "<red>You may not use this command."
      - queue clear
      }
    - if <context.args.get[2]> == null || <context.args.get[1]> == null {
      - narrate "<red>Invalid Syntax for <gold>/creditset<red> command."
      - narrate "<red>Usage<&co> <gold>/creditsset <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Sets a specified player<&sq>s wallet to the specified amount of credits."
      - queue clear
      }
    - if <p@<context.args.get[2]>.is_online> == false {
      - narrate "<red><context.args.get[2]> is not online. Player must be online."
      - queue clear
      }
    - if <context.args.get[2]> != null {
      - define creditAmt <context.args.get[1]>
      - flag <p@<context.args.get[2]>> "CURRENCY_Credits:%creditAmt%"
      - narrate targets:<context.args.get[2]> "<yellow>Setting your wallet to %creditAmt% credits."
      - narrate "<&7><&O>Setting <context.args.get[2]><&sq>s wallet to <context.args.get[1]> credits."
      }
      
# ============================================================================================
#

# Generic Vendor

# Inventory
inv_vendor_generic:
 
  type: inventory

  # Valid inventory types: BREWING, CHEST, DISPENSER, ENCHANTING, ENDER_CHEST, HOPPER, PLAYER, WORKBENCH
  inventory: CHEST

  # Note that titles only work for CHEST type inventories.
  title: <gold>Vendor
 
  # The size must be a multiple of 9. It is recommended not to go above 54.
  size: 27
 
  # You can specify the items in the slots of the inventory. For empty spaces, simply put
  # an empty "slot". Note the quotes around the entire lines.
  slots:
    #- "[] [] [] [] [seeds] [] [wood] [] []"
    #- "[] [] [] [] [] [] [stone] [] []"
    #- "[i@Rusty_Scimitar] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"
    - "[] [] [] [] [] [] [] [] []"

# Assignment
"vendor_generic":
    type: assignment
    
    interact scripts:
    - 10 vendorGenericScript
    
    actions:
      on spawn:
      - trigger name:proximity toggle:true radius:4
      - inventory swap d:<n@<npc.id>.inventory> o:<in@inv_vendor_generic>
      
      on enter proximity:
      - narrate "<white><npc.name> says<&cm> <&sq>Hey there<&cm> <player.name>!<&sq>"
      - narrate "<yellow>Type <gold>/vendorhelp<yellow> for assistance using Vendors."
      - inventory swap d:<n@<npc.id>.inventory> o:<in@inv_vendor_generic>
      
      on exit proximity:
      - narrate "<white><npc.name> says<&cm> <&sq>Thanks<&cm> come again soon!<&sq>

'vendorGenericScript':
    type: interact
    
    steps:
      1:
        click trigger:
          script:
            # Right Clicking on the vendor appraises the item in the player's hand.
            - narrate "<white><npc.name> says<&cm> <&sq>Welcome to my shop<&cm> <player.name>.<&sq>"
            - inventory open d:<n@<npc.id>.inventory>

"vendorInventoryEvents":
  type: world
  events:
    # Tell the player how to use a merchant.
    on vendorhelp command:
    - narrate "<yellow>---- Vendor Help ----"
    - narrate "<yellow>Right Click on a vendor to open the Vendor Transaction Window."
    - wait 1
    - narrate "<yellow><green>Left click<yellow> on an item in your inventory to see how much the vendor is willing to offer you for it."
    - wait 1
    - narrate "<yellow><red>Right click<yellow> on an item in your inventory to sell your item to the vendor."
    - wait 1
    - narrate "<yellow><green>Left click<yellow> on an item in the vendor<&sq>s inventory to see how much the item costs."
    - wait 1
    - narrate "<yellow><red>Right click<yellow> on an item in the vendor<&sq>s inventory to buy the item."
    - wait 1
    - narrate "<red>You may see ghost items in your inventory. Talk to the vendor again to reset your inventory view if this occurs."
    # When a player left clicks on an item, give price information about it.
    on player left clicks in inventory:
    - if <context.inventory.id_holder> == n@109 || <context.inventory.id_holder> == n@110 {
      - determine passively cancelled 
      - if <context.item.scriptname> == null define vendorItem <context.item.id>
      - if <context.item.scriptname> != null define vendorItem <context.item.scriptname>
      - if <context.item.display_name> != null {
        - narrate "<yellow>That<&sq>ll be <proc[vendorDetermineCredits].context[%vendorItem%]> credits for <context.item.display_name><yellow>." }
      - if <context.item.display_name> == null {
        - if <context.item.material.formatted> != nothing narrate "<yellow>That<&sq>ll be <proc[vendorDetermineCredits].context[%vendorItem%]> credits for <context.item.material.formatted><yellow>." }
      }
    # When a player right clicks on an item, attempt to buy or sell the item.
    # If the player has insufficient funds, do not allow them to buy an item.
    # If the player is holding shift, attempt to buy or sell a stack of the item they
    # clicked on.
    on player right clicks in inventory:
    - if <context.inventory.id_holder> == n@109 || <context.inventory.id_holder> == n@110 {
      - determine passively cancelled 
      - if <context.item.material.formatted> == nothing queue clear
      - if <context.item.scriptname> == null define vendorItem <context.item.id>
      - if <context.item.scriptname> != null define vendorItem <context.item.scriptname>
      - if <context.item.display_name> != null {
        - define creditAmt <proc[vendorDetermineCredits].context[%vendorItem%]>
        - if %creditAmt% == 0 && <context.item.display_name.contains[<&5>]> {
          - narrate "<yellow>You may not sell <context.item.display_name><yellow> to a vendor."
          - queue clear
          }
        - if %creditAmt% == 0 && <context.item.display_name.contains[<gold>]> {
          - narrate "<yellow>You may not sell <context.item.display_name><yellow> to a vendor."
          - queue clear
          }
        - take slot:<context.slot> qty:1
        - define currentAmt <player.flag[CURRENCY_Credits]>
        - define newAmt <math.as_int:%currentAmt%+%creditAmt%>
        - flag <player> "CURRENCY_Credits:%newAmt%"
        - narrate "<yellow>You receive %creditAmt% credits for <context.item.display_name><yellow>." }
      - if <context.item.display_name> == null {
        - define creditAmt <proc[vendorDetermineCredits].context[%vendorItem%]>
        - take "i@<context.item>"
        - define currentAmt <player.flag[CURRENCY_Credits]>
        - define newAmt <math.as_int:%currentAmt%+%creditAmt%>
        - flag <player> "CURRENCY_Credits:%newAmt%"
        - narrate "<yellow>You receive %creditAmt% credits for <context.item.material.formatted><yellow>." }
      }
    on player shift_right clicks in inventory:
    - if <context.inventory.id_holder> == n@109 || <context.inventory.id_holder> == n@110 {
      - determine passively cancelled 
      - if <context.item.material.formatted> == nothing queue clear
      - if <context.item.scriptname> == null define vendorItem <context.item.id>
      - if <context.item.scriptname> != null define vendorItem <context.item.scriptname>
      - if <context.item.display_name> != null {
        - define creditAmt <math.as_int:<proc[vendorDetermineCredits].context[%vendorItem%]>*<context.item.qty>>
        - if %creditAmt% == 0 && <context.item.display_name.contains[<&5>]> {
          - narrate "<yellow>You may not sell <context.item.display_name><yellow> to a vendor."
          - queue clear
          }
        - if %creditAmt% == 0 && <context.item.display_name.contains[<gold>]> {
          - narrate "<yellow>You may not sell <context.item.display_name><yellow> to a vendor."
          - queue clear
          }
        - take slot:<context.slot> qty:<context.item.qty>
        - define currentAmt <player.flag[CURRENCY_Credits]>
        - define newAmt <math.as_int:%currentAmt%+%creditAmt%>
        - flag <player> "CURRENCY_Credits:%newAmt%"
        - narrate "<yellow>You receive %creditAmt% credits for <context.item.qty> <context.item.display_name><yellow>." }
      - if <context.item.display_name> == null {
        - define creditAmt <math.as_int:<proc[vendorDetermineCredits].context[%vendorItem%]>*<context.item.qty>>
        - take "i@<context.item>" qty:<context.item.qty>
        - define currentAmt <player.flag[CURRENCY_Credits]>
        - define newAmt <math.as_int:%currentAmt%+%creditAmt%>
        - flag <player> "CURRENCY_Credits:%newAmt%"
        - narrate "<yellow>You receive %creditAmt% credits for <context.item.qty> <context.item.material.formatted><yellow>." }
      }
    on player shift_left clicks in inventory:
    - if <context.inventory.id_holder> == n@109 || <context.inventory.id_holder> == n@110 {
      - determine passively cancelled 
      - if <context.item.scriptname> == null define vendorItem <context.item.id>
      - if <context.item.scriptname> != null define vendorItem <context.item.scriptname>
      - if <context.item.display_name> != null {
        - narrate "<yellow>That<&sq>ll be <math.as_int:<proc[vendorDetermineCredits].context[%vendorItem%]>*<context.item.qty>> credits for <context.item.qty> <context.item.display_name><yellow>." }
      - if <context.item.display_name> == null {
        - if <context.item.material.formatted> != nothing narrate "<yellow>That<&sq>ll be <math.as_int:<proc[vendorDetermineCredits].context[%vendorItem%]>*<context.item.qty>> credits for <context.item.qty> <context.item.material.formatted><yellow>." }
      }
  
# Procedure for determining how much each item costs.  
# Setup:
# %itemID% will either be an actual literal item ID
# OR it will be the name of the script that created
# the custom item. 
# The value that gets determined is the credit amount.
# EG:
# if %itemID% == 0 determine 0
# If the itemID is 0, then it is worth 0 credits.
"vendorDetermineCredits":
    type: procedure
    definitions: itemID

    script:
    - if %itemID% == 0 determine 0
      else if %itemID% == 1 determine 5
      else if %itemID% == 2 determine 25
      else if %itemID% == 3 determine 1
      else if %itemID% == 4 determine 1
      else if %itemID% == 5 determine 1
      else if %itemID% == 6 determine 1
      else if %itemID% == 12 determine 1
      else if %itemID% == 13 determine 1
      else if %itemID% == 17 determine 2
      else if %itemID% == 18 determine 1
      else if %itemID% == 20 determine 2
      else if %itemID% == 22 determine 100
      else if %itemID% == 23 determine 15
      else if %itemID% == 24 determine 4
      else if %itemID% == 25 determine 3
      else if %itemID% == 27 determine 25
      else if %itemID% == 28 determine 10
      else if %itemID% == 29 determine 50
      else if %itemID% == 33 determine 10
      else if %itemID% == 35 determine 3
      else if %itemID% == 37 determine 1
      else if %itemID% == 38 determine 1
      else if %itemID% == 39 determine 2
      else if %itemID% == 40 determine 2
      else if %itemID% == 41 determine 2500
      else if %itemID% == 42 determine 2000
      else if %itemID% == 43 determine 16
      else if %itemID% == 44 determine 8
      else if %itemID% == 45 determine 15
      else if %itemID% == 46 determine 25
      else if %itemID% == 47 determine 100
      else if %itemID% == 48 determine 250
      else if %itemID% == 49 determine 175
      else if %itemID% == 50 determine 2
      else if %itemID% == 53 determine 1
      else if %itemID% == 54 determine 8
      else if %itemID% == 57 determine 25000
      else if %itemID% == 58 determine 4
      else if %itemID% == 61 determine 8
      else if %itemID% == 63 determine 5
      else if %itemID% == 64 determine 5
      else if %itemID% == 65 determine 5
      else if %itemID% == 66 determine 10
      else if %itemID% == 67 determine 2
      else if %itemID% == 69 determine 1
      else if %itemID% == 70 determine 2
      else if %itemID% == 71 determine 25
      else if %itemID% == 72 determine 2
      else if %itemID% == 77 determine 1
      else if %itemID% == 78 determine 1
      else if %itemID% == 79 determine 5
      else if %itemID% == 80 determine 1
      else if %itemID% == 81 determine 2
      else if %itemID% == 82 determine 5
      else if %itemID% == 84 determine 1000
      else if %itemID% == 85 determine 2
      else if %itemID% == 86 determine 2
      else if %itemID% == 87 determine 1
      else if %itemID% == 88 determine 5
      else if %itemID% == 89 determine 20
      else if %itemID% == 91 determine 4
      else if %itemID% == 95 determine 10
      else if %itemID% == 96 determine 2
      else if %itemID% == 98 determine 6
      else if %itemID% == 99 determine 2
      else if %itemID% == 100 determine 2
      else if %itemID% == 101 determine 75
      else if %itemID% == 102 determine 1
      else if %itemID% == 106 determine 2
      else if %itemID% == 107 determine 4
      else if %itemID% == 108 determine 20
      else if %itemID% == 109 determine 5
      else if %itemID% == 110 determine 50
      else if %itemID% == 111 determine 4
      else if %itemID% == 112 determine 5
      else if %itemID% == 113 determine 5
      else if %itemID% == 114 determine 5
      else if %itemID% == 115 determine 2
      else if %itemID% == 116 determine 3500
      else if %itemID% == 117 determine 500
      else if %itemID% == 118 determine 1000
      else if %itemID% == 121 determine 20
      else if %itemID% == 125 determine 1
      else if %itemID% == 126 determine 1
      else if %itemID% == 128 determine 2
      else if %itemID% == 130 determine 5000
      else if %itemID% == 133 determine 5000
      else if %itemID% == 134 determine 2
      else if %itemID% == 135 determine 2
      else if %itemID% == 136 determine 2
      else if %itemID% == 139 determine 1
      else if %itemID% == 140 determine 2
      else if %itemID% == 143 determine 1
      else if %itemID% == 145 determine 1250
      else if %itemID% == 146 determine 10
      else if %itemID% == 147 determine 10
      else if %itemID% == 148 determine 10
      else if %itemID% == 151 determine 50
      else if %itemID% == 152 determine 100
      else if %itemID% == 153 determine 100
      else if %itemID% == 154 determine 1000
      else if %itemID% == 155 determine 750
      else if %itemID% == 156 determine 750
      else if %itemID% == 157 determine 20
      else if %itemID% == 158 determine 10
      else if %itemID% == 159 determine 10
      else if %itemID% == 160 determine 10
      else if %itemID% == 161 determine 1
      else if %itemID% == 162 determine 2
      else if %itemID% == 163 determine 1
      else if %itemID% == 164 determine 1
      else if %itemID% == 170 determine 50
      else if %itemID% == 171 determine 5
      else if %itemID% == 172 determine 10
      else if %itemID% == 173 determine 50
      else if %itemID% == 174 determine 50
      else if %itemID% == 175 determine 4
      else if %itemID% == 256 determine 200
      else if %itemID% == 257 determine 600
      else if %itemID% == 258 determine 600
      else if %itemID% == 259 determine 210
      else if %itemID% == 260 determine 50
      else if %itemID% == 261 determine 50
      else if %itemID% == 262 determine 10
      else if %itemID% == 263 determine 5
      else if %itemID% == 264 determine 2750
      else if %itemID% == 265 determine 225
      else if %itemID% == 266 determine 275
      else if %itemID% == 267 determine 400
      else if %itemID% == 268 determine 10
      else if %itemID% == 269 determine 5
      else if %itemID% == 270 determine 15
      else if %itemID% == 271 determine 15
      else if %itemID% == 272 determine 10
      else if %itemID% == 273 determine 5
      else if %itemID% == 274 determine 15
      else if %itemID% == 275 determine 15
      else if %itemID% == 276 determine 5500
      else if %itemID% == 277 determine 2800
      else if %itemID% == 278 determine 8250
      else if %itemID% == 279 determine 8250
      else if %itemID% == 280 determine 1
      else if %itemID% == 281 determine 2
      else if %itemID% == 282 determine 4
      else if %itemID% == 283 determine 550
      else if %itemID% == 284 determine 275
      else if %itemID% == 285 determine 825
      else if %itemID% == 286 determine 825
      else if %itemID% == 287 determine 5
      else if %itemID% == 288 determine 2
      else if %itemID% == 289 determine 5
      else if %itemID% == 290 determine 5
      else if %itemID% == 291 determine 5
      else if %itemID% == 292 determine 400
      else if %itemID% == 293 determine 5500
      else if %itemID% == 294 determine 550
      else if %itemID% == 295 determine 2
      else if %itemID% == 296 determine 5
      else if %itemID% == 297 determine 15
      else if %itemID% == 298 determine 500
      else if %itemID% == 299 determine 800
      else if %itemID% == 300 determine 700
      else if %itemID% == 301 determine 400
      else if %itemID% == 302 determine 5000
      else if %itemID% == 303 determine 8000
      else if %itemID% == 304 determine 7000
      else if %itemID% == 305 determine 4000
      else if %itemID% == 306 determine 1000
      else if %itemID% == 307 determine 1600
      else if %itemID% == 308 determine 1400
      else if %itemID% == 309 determine 800
      else if %itemID% == 310 determine 13750
      else if %itemID% == 311 determine 22000
      else if %itemID% == 312 determine 19250
      else if %itemID% == 313 determine 11000
      else if %itemID% == 314 determine 1375
      else if %itemID% == 315 determine 2200
      else if %itemID% == 316 determine 1925
      else if %itemID% == 317 determine 1100
      else if %itemID% == 318 determine 5
      else if %itemID% == 319 determine 5
      else if %itemID% == 320 determine 10
      else if %itemID% == 321 determine 25
      else if %itemID% == 322 determine 300
      else if %itemID% == 323 determine 8
      else if %itemID% == 324 determine 5
      else if %itemID% == 325 determine 600
      else if %itemID% == 326 determine 600
      else if %itemID% == 327 determine 600
      else if %itemID% == 328 determine 1000
      else if %itemID% == 329 determine 5000
      else if %itemID% == 330 determine 1200
      else if %itemID% == 331 determine 10
      else if %itemID% == 332 determine 1
      else if %itemID% == 333 determine 2
      else if %itemID% == 334 determine 100
      else if %itemID% == 335 determine 600
      else if %itemID% == 336 determine 10
      else if %itemID% == 337 determine 10
      else if %itemID% == 338 determine 2
      else if %itemID% == 339 determine 2
      else if %itemID% == 340 determine 50
      else if %itemID% == 341 determine 15
      else if %itemID% == 342 determine 1200
      else if %itemID% == 343 determine 1200
      else if %itemID% == 344 determine 1
      else if %itemID% == 345 determine 1000
      else if %itemID% == 346 determine 25
      else if %itemID% == 347 determine 1100
      else if %itemID% == 348 determine 25
      else if %itemID% == 349 determine 5
      else if %itemID% == 350 determine 10
      else if %itemID% == 351 determine 5
      else if %itemID% == 352 determine 2
      else if %itemID% == 353 determine 2
      else if %itemID% == 354 determine 50
      else if %itemID% == 355 determine 25
      else if %itemID% == 356 determine 75
      else if %itemID% == 357 determine 4
      else if %itemID% == 358 determine 125
      else if %itemID% == 359 determine 400
      else if %itemID% == 360 determine 1
      else if %itemID% == 361 determine 1
      else if %itemID% == 362 determine 1
      else if %itemID% == 363 determine 5
      else if %itemID% == 364 determine 10
      else if %itemID% == 365 determine 5
      else if %itemID% == 366 determine 10
      else if %itemID% == 367 determine 1
      else if %itemID% == 368 determine 50
      else if %itemID% == 369 determine 25
      else if %itemID% == 370 determine 250
      else if %itemID% == 371 determine 30
      else if %itemID% == 372 determine 5
      else if %itemID% == 373 determine 10
      else if %itemID% == 374 determine 10
      else if %itemID% == 375 determine 10
      else if %itemID% == 376 determine 20
      else if %itemID% == 377 determine 12
      else if %itemID% == 378 determine 150
      else if %itemID% == 379 determine 1000
      else if %itemID% == 380 determine 1500
      else if %itemID% == 381 determine 100
      else if %itemID% == 382 determine 35
      else if %itemID% == 386 determine 500
      else if %itemID% == 387 determine 500
      else if %itemID% == 388 determine 550
      else if %itemID% == 389 determine 75
      else if %itemID% == 390 determine 50
      else if %itemID% == 391 determine 2
      else if %itemID% == 392 determine 2
      else if %itemID% == 393 determine 2
      else if %itemID% == 394 determine 10
      else if %itemID% == 395 determine 100
      else if %itemID% == 396 determine 150
      else if %itemID% == 387 determine 100
      else if %itemID% == 398 determine 5
      else if %itemID% == 399 determine 25000
      else if %itemID% == 400 determine 0
      else if %itemID% == 401 determine 1
      else if %itemID% == 402 determine 1
      else if %itemID% == 403 determine 500
      else if %itemID% == 404 determine 250
      else if %itemID% == 405 determine 25
      else if %itemID% == 406 determine 10
      else if %itemID% == 417 determine 1000
      else if %itemID% == 418 determine 1375
      else if %itemID% == 419 determine 13750
      else if %itemID% == 420 determine 100
      else if %itemID% == 421 determine 1000
      else if %itemID% == "Rock" determine 1
      else if %itemID% == "PetRock" determine 2
      else if %itemID% == "Pile_of_Dirt" determine 1
      else if %itemID% == "Pile_of_Mud" determine 1
      else if %itemID% == "Torn_Sheet_of_Paper" determine 1
      else if %itemID% == "Dusty_Cobwebs" determine 5
      else if %itemID% == "Snapped_Twig" determine 2
      else if %itemID% == "Driftwood" determine 2
      else if %itemID% == "Piece_of_String" determine 1
      else if %itemID% == "Chunk_of_Flint" determine 1
      else if %itemID% == "Marshmellow" determine 10
      else if %itemID% == "Rusty_Longsword" determine 5
      else if %itemID% == "Rusty_Shortsword" determine 5
      else if %itemID% == "Rusty_Two_Handed_Sword" determine 5
      else if %itemID% == "Rusty_Dagger" determine 5
      else if %itemID% == "Rusty_Rapier" determine 5
      else if %itemID% == "Rusty_Scimitar" determine 5
      else if %itemID% == "Rusty_Warhammer" determine 5
      else if %itemID% == "Rusty_Axe" determine 5
      else if %itemID% == "Rusty_Battleaxe" determine 5
      else if %itemID% == "Rusty_Great_Axe" determine 5
      else if %itemID% == "Rusty_Scythe" determine 5
      else if %itemID% == "Emberdust" determine 5
      else if %itemID% == "Charred_Flesh" determine 5
      else if %itemID% == "Blaze_Eye" determine 10
      else if %itemID% == "Pumpkin_Soldier_Helmet" determine 10
      else if %itemID% == "Wither_Parts" determine 15
      else if %itemID% == "Skeleton_Skull" determine 25
      else if %itemID% == "Enderparts" determine 20
      else if %itemID% == "Enderdust" determine 20
      else if %itemID% == "Endersoul" determine 25
      else if %itemID% == "Enderthread" determine 15
      else if %itemID% == "Endermold" determine 5
      else if %itemID% == "Tarnished_Longsword" determine 10
      else if %itemID% == "Tarnished_Shortsword" determine 10
      else if %itemID% == "Tarnished_Two_Handed_Sword" determine 10
      else if %itemID% == "Tarnished_Dagger" determine 10
      else if %itemID% == "Tarnished_Rapier" determine 10
      else if %itemID% == "Tarnished_Scimitar" determine 10
      else if %itemID% == "Tarnished_Warhammer" determine 10
      else if %itemID% == "Tarnished_Axe" determine 10
      else if %itemID% == "Tarnished_Battleaxe" determine 10
      else if %itemID% == "Tarnished_Great_Axe" determine 10
      else if %itemID% == "Tarnished_Scythe" determine 10
      else if %itemID% == "Leather_Scraps" determine 25
      else if %itemID% == "Patchwork_Leather_Hat" determine 50
      else if %itemID% == "Patchwork_Leather_Tunic" determine 100
      else if %itemID% == "Patchwork_Leather_Pants" determine 75
      else if %itemID% == "Patchwork_Leather_Boots" determine 25
      else if %itemID% == "Tattered_Leather_Hat" determine 50
      else if %itemID% == "Tattered_Leather_Tunic" determine 100
      else if %itemID% == "Tattered_Leather_Pants" determine 75
      else if %itemID% == "Tattered_Leather_Boots" determine 25
      else if %itemID% == "Dented_Militia_Helm" determine 500
      else if %itemID% == "Flame_Ingot" determine 100
      else if %itemID% == "Grinding_Stone" determine 50
      else if %itemID% == "Blaze_Temper" determine 75
      else if %itemID% == "Polished_Steel_Sword" determine 250
      else if %itemID% == "Polished_Steel_Axe" determine 250
      else if %itemID% == "Polished_Steel_Scythe" determine 250
      else if %itemID% == "Butterblade" determine 50
      else if %itemID% == "Sword_of_Ender" determine 500
      else if %itemID% == "Ender_Scythe" determine 500
      else if %itemID% == "Enderplate_Chestpiece" determine 2500
      else if %itemID% == "Enderplate_Leggings" determine 2000
      else if %itemID% == "Enderplate_Boots" determine 1000
      else if %itemID% == "Enderplate_Helm" determine 1500
      else if %itemID% == "Ender_Orb" determine 150
      else if %itemID% == "Enderfish" determine 100
      else if %itemID% == "Endercookie" determine 100
      else if %itemID% == "Enderplate_Rings" determine 75
      else if %itemID% == "Enderplate_Block" determine 100
      else if %itemID% == "Hatesteel_Chestpiece" determine 3000
      else if %itemID% == "Hatesteel_Leggings" determine 2750
      else if %itemID% == "Hatesteel_Boots" determine 2000
      else if %itemID% == "Hatesteel_Helm" determine 2500
      else if %itemID% == "Fine_Steel_Plate_Helm" determine 1000
      else if %itemID% == "Fine_Steel_Plate_Chestpiece" determine 2000
      else if %itemID% == "Fine_Steel_Plate_Leggings" determine 1500
      else if %itemID% == "Fine_Steel_Plate_Boots" determine 750
      else if %itemID% == "Fine_Steel_Longsword" determine 500
      else if %itemID% == "Fine_Steel_Shortsword" determine 500
      else if %itemID% == "Fine_Steel_Two_Handed_Sword" determine 500
      else if %itemID% == "Fine_Steel_Rapier" determine 500
      else if %itemID% == "Fine_Steel_Hammer" determine 500
      else if %itemID% == "Fine_Steel_Battleaxe" determine 500
      else if %itemID% == "Fine_Steel_Greataxe" determine 500
      else if %itemID% == "Fine_Steel_Cleaver" determine 500
      else if %itemID% == "Ringmail_Coif" determine 2000
      else if %itemID% == "Ringmail_Tunic" determine 5000
      else if %itemID% == "Ringmail_Leggings" determine 4000
      else if %itemID% == "Ringmail_Boots" determine 2000
      else if %itemID% == "Shattered_Flamemail_Helm" determine 1000
      else if %itemID% == "Shattered_Flamemail_Chestpiece" determine 1000
      else if %itemID% == "Shattered_Flamemail_Kilt" determine 1000
      else if %itemID% == "Shattered_Flamemail_Boots" determine 1000
      else if %itemID% == "Wither_Essence" determine 5000
      else if %itemID% == "Runed_Enderplate_Helm" determine 5000
      else if %itemID% == "Runed_Enderplate_Chestpiece" determine 5000
      else if %itemID% == "Runed_Enderplate_Leggings" determine 5000
      else if %itemID% == "Runed_Enderplate_Boots" determine 5000
      else if %itemID% == "Darkblade" determine 12500
      else if %itemID% == "Fire_Puff" determine 5000
      else if %itemID% == "Joeys_Incinerating_Charge" determine 20000
      else if %itemID% == "Digmaster_5000" determine 5000
      else if %itemID% == "Doom" determine 15000
      else if %itemID% == "Blue_Harbinger" determine 15000
      else if %itemID% == "Pain" determine 7500
      else if %itemID% == "Anguish" determine 7500
      else if %itemID% == "Redwood_Recurve_Bow" determine 7500
      else if %itemID% == "Ashwood_Recurve_Bow" determine 7500
      else if %itemID% == "rune1" determine 5
      else if %itemID% == "rune2" determine 5
      else if %itemID% == "rune3" determine 5
      else if %itemID% == "rune4" determine 5
      else if %itemID% == "rune5" determine 5
      else if %itemID% == "rune6" determine 5
      else if %itemID% == "rune7" determine 5
      else if %itemID% == "rune8" determine 5
      else if %itemID% == "rune9" determine 5
      else if %itemID% == "rune10" determine 5
      else if %itemID% == "rune11" determine 5
      else if %itemID% == "rune12" determine 5
      else if %itemID% == "words1" determine 5
      else if %itemID% == "words2" determine 5
      else if %itemID% == "words3" determine 5
      else if %itemID% == "words4" determine 5
      else if %itemID% == "words5" determine 5
      else if %itemID% == "words6" determine 5
      else if %itemID% == "words7" determine 5
      else if %itemID% == "words8" determine 5
      else if %itemID% == "words9" determine 5
      else if %itemID% == "words10" determine 5
      else if %itemID% == "words11" determine 5
      else if %itemID% == "words12" determine 5
      else determine 0