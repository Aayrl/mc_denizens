# Custom Loot Table
# Tyler J. Sawyer
# Version: 1.6
# Last Updated: 13:15 on May 29, 2014 (Thursday)
# Defines custom loot items for particular mobs when they are slain.

"customLootTable":
  type: world
  events:
    on entity death:
      - if <context.damager.is_player> {
        - if <context.entity.name> == "Bandit" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[2].to[12]>
          - queue clear
          }
          else if <context.entity.name> == "Sinestra Spawn" {
          - queue clear
          }
          else if <context.entity.name> == "Hill Giant" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[750].to[1000]>
          - queue clear
          }
          else if <context.entity.name> == "Skeletal Pawn" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[150].to[200]>
          - queue clear
          }
          else if <context.entity.name> == "Skeletal Bishop" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[250].to[300]>
          - queue clear
          }
          else if <context.entity.name> == "Skeletal Knight" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[450].to[600]>
          - queue clear
          }
          else if <context.entity.name> == "Goblin" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[1].to[7]>
          - queue clear
          }
          else if <context.entity.name> == "Ice Goblin" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[25].to[100]>
          - queue clear
          }
          else if <context.entity.name> == "Pig Sentry" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[20].to[30]>
          - queue clear
          }
          else if <context.entity.name> == "Pig Centurion" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[20].to[30]>
          - queue clear
          }
          else if <context.entity.name> == "Pig Scout" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[20].to[30]>
          - queue clear
          }
          else if <context.entity.name> == "Pig Flamecaller" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[20].to[30]>
          - queue clear
          }
          else if <context.entity.name> == "Hate Fiend" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[25].to[50]>
          - queue clear
          }
          else if <context.entity.name> == "Hate Sprite" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[15].to[35]>
          - queue clear
          }
          else if <context.entity.name> == "Hate Golem" {
          - run "Drop_Credits" d:<context.damager>|<util.random.int[45].to[75]>
          - queue clear
          }
          else if <context.entity.entity_type> == "Bat" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Blaze" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Cave_Spider" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Chicken" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Cow" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Creeper" {
          - drop "i@<proc:LootTable_Creeper>" location:<context.entity.location>
          - run "Drop_Credits" d:<context.damager>|<util.random.int[1].to[4]>
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          - if <util.random.int[1].to[100]> >= 85 drop "i@<proc:LootTable_LowTierPotions>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Enderman" {
          - drop "i@<proc:LootTable_Enderman>" location:<context.entity.location>
          - run "Drop_Credits" d:<context.damager>|<util.random.int[1].to[15]>
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          - if <util.random.int[1].to[100]> >= 85 drop "i@<proc:LootTable_MediumTierPotions>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Ghast" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Horse" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Magma_Cube" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Mushroom_Cow" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Ocelot" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Pig" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Pig_Zombie" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Sheep" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Silverfish" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Skeleton" {
          - if <context.entity.location.world.name> == "poearth" {
            - drop "i@<proc:LootTable_PoEarth_Basic>" location:<context.entity.location>
            - run "Drop_Credits" d:<context.damager>|<util.random.int[15].to[25]>
            - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
            }
            else {
            - drop "i@<proc:LootTable_Skeleton>" location:<context.entity.location>
            - run "Drop_Credits" d:<context.damager>|<util.random.int[1].to[4]>
            - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
            - if <util.random.int[1].to[100]> >= 85 drop "i@<proc:LootTable_LowTierPotions>" location:<context.entity.location>
            }
          }
          else if <context.entity.entity_type> == "Slime" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Snowman" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Spider" {
          - if <context.entity.location.world.name> == "poearth" {
            - drop "i@<proc:LootTable_PoEarth_Basic>" location:<context.entity.location>
            - run "Drop_Credits" d:<context.damager>|<util.random.int[15].to[25]>
            - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
            }
            else {
            - drop "i@<proc:LootTable_Spider>" location:<context.entity.location>
            - run "Drop_Credits" d:<context.damager>|<util.random.int[1].to[4]>
            - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
            - if <util.random.int[1].to[100]> >= 85 drop "i@<proc:LootTable_LowTierPotions>" location:<context.entity.location>
            }
          }
          else if <context.entity.entity_type> == "Squid" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Witch" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Wolf" {
          - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
          }
          else if <context.entity.entity_type> == "Zombie" {
          - if <context.entity.location.world.name> == "poearth" {
            - drop "i@<proc:LootTable_PoEarth_Basic>" location:<context.entity.location>
            - run "Drop_Credits" d:<context.damager>|<util.random.int[15].to[25]>
            - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
            }
            else {
            - drop "i@<proc:LootTable_Zombie>" location:<context.entity.location>
            - run "Drop_Credits" d:<context.damager>|<util.random.int[1].to[4]>
            - if <util.random.int[1].to[100]> >= 75 drop "i@<proc:LootTable_SpellMat>" location:<context.entity.location>
            - if <util.random.int[1].to[100]> >= 85 drop "i@<proc:LootTable_LowTierPotions>" location:<context.entity.location>
            }
          }
        }

# To call : -run "Drop_Credits" d:ARG1|ARG2
"Drop_Credits":
   type: task
   definitions: killerEntity|creditAmt
   script:
     - define currentAmt <<%killerEntity%>.flag[CURRENCY_Credits]>
     - define newAmt <math.as_int:%currentAmt%+%creditAmt%>
     - flag <%killerEntity%> "CURRENCY_Credits:%newAmt%"
     - narrate targets:<%killerEntity%> "<&2>You loot %creditAmt% credits from the corpse."
        
"LootTable_SpellMat":
    type: procedure
    script:
      - random 24
      - determine "rune1"
      - determine "rune2"
      - determine "rune3"
      - determine "rune4"
      - determine "rune5"
      - determine "rune6"
      - determine "rune7"
      - determine "rune8"
      - determine "rune9"
      - determine "rune10"
      - determine "rune11"
      - determine "rune12"
      - determine "words1"
      - determine "words2"
      - determine "words3"
      - determine "words4"
      - determine "words5"
      - determine "words6"
      - determine "words7"
      - determine "words8"
      - determine "words9"
      - determine "words10"
      - determine "words11"
      - determine "words12"
      
"LootTable_LowTierPotions":
    type: procedure
    script:
      - random 6
      - determine "potion_healing_1"
      - determine "potion_healing_2"
      - determine "potion_healing_3"
      - determine "potion_saturation_1"
      - determine "potion_saturation_2"
      - determine "potion_saturation_3"
      
"LootTable_MediumTierPotions":
    type: procedure
    script:
      - random 6
      - determine "potion_healing_4"
      - determine "potion_healing_5"
      - determine "potion_healing_6"
      - determine "potion_saturation_4"
      - determine "potion_saturation_5"
      - determine "potion_saturation_6"
      
"LootTable_HighTierPotions":
    type: procedure
    script:
      - random 8
      - determine "potion_healing_7"
      - determine "potion_healing_8"
      - determine "potion_healing_9"
      - determine "potion_healing_10"
      - determine "potion_saturation_7"
      - determine "potion_saturation_8"
      - determine "potion_saturation_9"
      - determine "potion_saturation_10"
        
# Procedure based on an example from :
# http://scripts.citizensnpcs.co/view/34aapf
# 
"LootTable_Enderman":
    type: procedure

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 5
      - determine "Enderparts"
      - determine "Endersoul" 
      - determine "Enderdust"
      - determine "Enderthread"
      - determine "Endermold"
      }
 
    - if %quality% == Uncommon {
        - random 10
        - determine "Enderplate_Rings"
        - determine "Enderplate_Block"
        - determine "Sword_of_Ender"
        - determine "Ender_Scythe"
        - determine "Enderplate_Chestpiece"
        - determine "Enderplate_Leggings" 
        - determine "Enderplate_Boots"
        - determine "Enderplate_Helm" 
        - determine "Enderfish"
        - determine "Endercookie"
        }
 
    - if %quality% == Rare {
        - random 8
        - determine "Darkblade"
        - determine "Digmaster_5000"
        - determine "Runed_Enderplate_Helm"
        - determine "Runed_Enderplate_Chestpiece"
        - determine "Runed_Enderplate_Leggings"
        - determine "Runed_Enderplate_Boots"
        - determine "Ender_Essence"
        - determine "Ender_Temper"
        }
 
    - if %quality% == Epic {
        - random 3
        - determine "Rune_of_Healing"
        - determine "Journeyman_Boots"
        - determine "EnderdragonOre"
        }

"LootTable_Zombie":
    type: procedure

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 20
      - determine "Rock"
      - determine "PetRock" 
      - determine "Pile_of_Dirt"
      - determine "Pile_of_Mud"
      - determine "Torn_Sheet_of_Paper"
      - determine "Snapped_Twig"
      - determine "Driftwood"
      - determine "Chunk_of_Flint"
      - determine "Marshmellow"
      - determine "Rusty_Longsword"
      - determine "Rusty_Shortsword"
      - determine "Rusty_Two_Handed_Sword"
      - determine "Rusty_Dagger"
      - determine "Rusty_Rapier"
      - determine "Rusty_Scimitar"
      - determine "Rusty_Warhammer"
      - determine "Rusty_Axe"
      - determine "Rusty_Battleaxe"
      - determine "Rusty_Great_Axe"
      - determine "Rusty_Scythe"
      }
 
    - if %quality% == Uncommon {
        - random 20
        - determine "Tarnished_Longsword"
        - determine "Tarnished_Shortsword"
        - determine "Tarnished_Two_Handed_Sword"
        - determine "Tarnished_Dagger"
        - determine "Tarnished_Rapier"
        - determine "Tarnished_Scimitar"
        - determine "Tarnished_Warhammer"
        - determine "Tarnished_Axe"
        - determine "Tarnished_Battleaxe"
        - determine "Tarnished_Great_Axe"
        - determine "Tarnished_Scythe"
        - determine "Leather_Scraps"
        - determine "Patchwork_Leather_Hat"
        - determine "Patchwork_Leather_Tunic"
        - determine "Patchwork_Leather_Pants"
        - determine "Patchwork_Leather_Boots"
        - determine "Tattered_Leather_Hat"
        - determine "Tattered_Leather_Tunic"
        - determine "Tattered_Leather_Pants"
        - determine "Tattered_Leather_Boots"
        }
 
    - if %quality% == Rare {
        - random 6
        - determine "Ringmail_Coif"
        - determine "Ringmail_Tunic"
        - determine "Ringmail_Leggings"
        - determine "Ringmail_Boots"
        - determine "Ashwood_Recurve_Bow"
        - determine "Redwood_Recurve_Bow"
        }
 
    - if %quality% == Epic {
        - random 3
        - determine "Nightblade"
        - determine "Willsapper"
        - determine "Eyepatch_of_Plunder"
        }

"LootTable_Skeleton":
    type: procedure

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 20
      - determine "Rock"
      - determine "PetRock" 
      - determine "Pile_of_Dirt"
      - determine "Pile_of_Mud"
      - determine "Torn_Sheet_of_Paper"
      - determine "Snapped_Twig"
      - determine "Driftwood"
      - determine "Chunk_of_Flint"
      - determine "Marshmellow"
      - determine "Rusty_Longsword"
      - determine "Rusty_Shortsword"
      - determine "Rusty_Two_Handed_Sword"
      - determine "Rusty_Dagger"
      - determine "Rusty_Rapier"
      - determine "Rusty_Scimitar"
      - determine "Rusty_Warhammer"
      - determine "Rusty_Axe"
      - determine "Rusty_Battleaxe"
      - determine "Rusty_Great_Axe"
      - determine "Rusty_Scythe"
      }
 
    - if %quality% == Uncommon {
        - random 20
        - determine "Tarnished_Longsword"
        - determine "Tarnished_Shortsword"
        - determine "Tarnished_Two_Handed_Sword"
        - determine "Tarnished_Dagger"
        - determine "Tarnished_Rapier"
        - determine "Tarnished_Scimitar"
        - determine "Tarnished_Warhammer"
        - determine "Tarnished_Axe"
        - determine "Tarnished_Battleaxe"
        - determine "Tarnished_Great_Axe"
        - determine "Tarnished_Scythe"
        - determine "Leather_Scraps"
        - determine "Patchwork_Leather_Hat"
        - determine "Patchwork_Leather_Tunic"
        - determine "Patchwork_Leather_Pants"
        - determine "Patchwork_Leather_Boots"
        - determine "Tattered_Leather_Hat"
        - determine "Tattered_Leather_Tunic"
        - determine "Tattered_Leather_Pants"
        - determine "Tattered_Leather_Boots"
        }
 
    - if %quality% == Rare {
        - random 6
        - determine "Ringmail_Coif"
        - determine "Ringmail_Tunic"
        - determine "Ringmail_Leggings"
        - determine "Ringmail_Boots"
        - determine "Ashwood_Recurve_Bow"
        - determine "Redwood_Recurve_Bow"
        }
 
    - if %quality% == Epic {
        - random 3
        - determine "Nightblade"
        - determine "Willsapper"
        - determine "Eyepatch_of_Plunder"
        }

"LootTable_Creeper":
    type: procedure

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 20
      - determine "Rock"
      - determine "PetRock" 
      - determine "Pile_of_Dirt"
      - determine "Pile_of_Mud"
      - determine "Torn_Sheet_of_Paper"
      - determine "Snapped_Twig"
      - determine "Driftwood"
      - determine "Chunk_of_Flint"
      - determine "Marshmellow"
      - determine "Rusty_Longsword"
      - determine "Rusty_Shortsword"
      - determine "Rusty_Two_Handed_Sword"
      - determine "Rusty_Dagger"
      - determine "Rusty_Rapier"
      - determine "Rusty_Scimitar"
      - determine "Rusty_Warhammer"
      - determine "Rusty_Axe"
      - determine "Rusty_Battleaxe"
      - determine "Rusty_Great_Axe"
      - determine "Rusty_Scythe"
      }
 
    - if %quality% == Uncommon {
        - random 20
        - determine "Tarnished_Longsword"
        - determine "Tarnished_Shortsword"
        - determine "Tarnished_Two_Handed_Sword"
        - determine "Tarnished_Dagger"
        - determine "Tarnished_Rapier"
        - determine "Tarnished_Scimitar"
        - determine "Tarnished_Warhammer"
        - determine "Tarnished_Axe"
        - determine "Tarnished_Battleaxe"
        - determine "Tarnished_Great_Axe"
        - determine "Tarnished_Scythe"
        - determine "Leather_Scraps"
        - determine "Patchwork_Leather_Hat"
        - determine "Patchwork_Leather_Tunic"
        - determine "Patchwork_Leather_Pants"
        - determine "Patchwork_Leather_Boots"
        - determine "Tattered_Leather_Hat"
        - determine "Tattered_Leather_Tunic"
        - determine "Tattered_Leather_Pants"
        - determine "Tattered_Leather_Boots"
        }
 
    - if %quality% == Rare {
        - random 6
        - determine "Ringmail_Coif"
        - determine "Ringmail_Tunic"
        - determine "Ringmail_Leggings"
        - determine "Ringmail_Boots"
        - determine "Ashwood_Recurve_Bow"
        - determine "Redwood_Recurve_Bow"
        }
 
    - if %quality% == Epic {
        - random 3
        - determine "Nightblade"
        - determine "Willsapper"
        - determine "Eyepatch_of_Plunder"
        }

"LootTable_Spider":
    type: procedure

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 11
      - determine "Rock"
      - determine "PetRock" 
      - determine "Pile_of_Dirt"
      - determine "Pile_of_Mud"
      - determine "Torn_Sheet_of_Paper"
      - determine "Snapped_Twig"
      - determine "Driftwood"
      - determine "Chunk_of_Flint"
      - determine "Marshmellow"
      - determine "Dusty_Cobwebs"
      - determine "Piece_of_String"
      }
 
    - if %quality% == Uncommon {
        - random 9
        - determine "Leather_Scraps"
        - determine "Patchwork_Leather_Hat"
        - determine "Patchwork_Leather_Tunic"
        - determine "Patchwork_Leather_Pants"
        - determine "Patchwork_Leather_Boots"
        - determine "Tattered_Leather_Hat"
        - determine "Tattered_Leather_Tunic"
        - determine "Tattered_Leather_Pants"
        - determine "Tattered_Leather_Boots"
        }
 
    - if %quality% == Rare {
        - random 6
        - determine "Ringmail_Coif"
        - determine "Ringmail_Tunic"
        - determine "Ringmail_Leggings"
        - determine "Ringmail_Boots"
        - determine "Ashwood_Recurve_Bow"
        - determine "Redwood_Recurve_Bow"
        }
 
    - if %quality% == Epic {
        - random 3
        - determine "Nightblade"
        - determine "Willsapper"
        - determine "Eyepatch_of_Plunder"
        }
        
"LootTable_HateKeep":
    type: procedure

    script:
    - define roll <util.random.int[1].to[10000]>
    - if %roll% >= 0 && %roll% < 9000 define quality "Common"
      else if %roll% >= 9000 && %roll% < 9800 define quality "Uncommon"
      else if %roll% >= 9800 && %roll% < 9950 define quality "Rare"
      else if %roll% >= 9950 define quality "Epic"
 
    - if %quality% == Common {
      - random 5
      - determine "Enderparts"
      - determine "Endersoul" 
      - determine "Enderdust"
      - determine "Enderthread"
      - determine "Endermold"
      }
 
    - if %quality% == Uncommon {
        - random 10
        - determine "Enderplate_Chestpiece"
        - determine "Enderplate_Leggings" 
        - determine "Enderplate_Boots"
        - determine "Enderplate_Helm" 
        - determine "Enderfish"
        - determine "Endercookie"
        - determine "Hatesteel_Leggings"
        - determine "Hatesteel_Boots"
        - determine "Hatesteel_Chestpiece"
        - determine "Hatesteel_Helm"
        }
 
    - if %quality% == Rare {
        - random 6
        - determine "Doom"
        - determine "Blue_Harbinger"
        - determine "Runed_Enderplate_Helm"
        - determine "Runed_Enderplate_Chestpiece"
        - determine "Runed_Enderplate_Leggings"
        - determine "Runed_Enderplate_Boots"
        }
 
    - if %quality% == Epic {
        - random 2
        - determine "Hurricane"
        - determine "Bucket_of_Saturation"
        }
        
"LootTable_POF_ZombiePigs":
    type: procedure 

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - determine "Charred_Flesh"
      }
 
    - if %quality% == Uncommon {
        - random 7
        - determine "Flame_Ingot"
        - determine "Grinding_Stone"
        - determine "Blaze_Temper"
        - determine "Polished_Steel_Sword"
        - determine "Polished_Steel_Axe"
        - determine "Polished_Steel_Scythe"
        - determine "Butterblade"
        }
 
    - if %quality% == Rare {
        - random 4
        - determine "Shattered_Flamemail_Helm"
        - determine "Shattered_Flamemail_Chestpiece"
        - determine "Shattered_Flamemail_Kilt"
        - determine "Shattered_Flamemail_Boots"
        }
 
    - if %quality% == Epic {
        - random 3
        - determine "Nightblade"
        - determine "Rune_of_Healing"
        - determine "Flamecaller"
        }
        
"LootTable_Goblin":
    type: procedure

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 11
      - determine "Rusty_Longsword"
      - determine "Rusty_Shortsword"
      - determine "Rusty_Two_Handed_Sword"
      - determine "Rusty_Dagger"
      - determine "Rusty_Rapier"
      - determine "Rusty_Scimitar"
      - determine "Rusty_Warhammer"
      - determine "Rusty_Axe"
      - determine "Rusty_Battleaxe"
      - determine "Rusty_Great_Axe"
      - determine "Rusty_Scythe"
      }
 
    - if %quality% == Uncommon {
        - random 20
        - determine "Tarnished_Longsword"
        - determine "Tarnished_Shortsword"
        - determine "Tarnished_Two_Handed_Sword"
        - determine "Tarnished_Dagger"
        - determine "Tarnished_Rapier"
        - determine "Tarnished_Scimitar"
        - determine "Tarnished_Warhammer"
        - determine "Tarnished_Axe"
        - determine "Tarnished_Battleaxe"
        - determine "Tarnished_Great_Axe"
        - determine "Tarnished_Scythe"
        - determine "Leather_Scraps"
        - determine "Patchwork_Leather_Hat"
        - determine "Patchwork_Leather_Tunic"
        - determine "Patchwork_Leather_Pants"
        - determine "Patchwork_Leather_Boots"
        - determine "Tattered_Leather_Hat"
        - determine "Tattered_Leather_Tunic"
        - determine "Tattered_Leather_Pants"
        - determine "Tattered_Leather_Boots"
        }
 
    - if %quality% == Rare {
        - random 6
        - determine "Ringmail_Coif"
        - determine "Ringmail_Tunic"
        - determine "Ringmail_Leggings"
        - determine "Ringmail_Boots"
        - determine "Ashwood_Recurve_Bow"
        - determine "Redwood_Recurve_Bow"
        }
 
    - if %quality% == Epic {
        - random 3
        - determine "Nightblade"
        - determine "Willsapper"
        - determine "Eyepatch_of_Plunder"
        }
        
"LootTable_PoEarth_Basic":
    type: procedure 

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 6
      - determine "Chunk_of_Pottery"
      - determine "Sheet_of_Slate"
      - determine "Baby_Cactus"
      - determine "Block_of_Sponge"
      - determine "Human_Remains"
      - determine "Bits_of_Lead"
      }
 
    - if %quality% == Uncommon {
        - random 15
        - determine "Fine_Steel_Longsword"
        - determine "Fine_Steel_Shortsword"
        - determine "Fine_Steel_Two_Handed_Sword"
        - determine "Fine_Steel_Rapier"
        - determine "Fine_Steel_Hammer"
        - determine "Fine_Steel_Battleaxe"
        - determine "Fine_Steel_Greataxe"
        - determine "Fine_Steel_Cleaver"
        - determine "Fine_Steel_Plate_Helm"
        - determine "Fine_Steel_Plate_Chestpiece"
        - determine "Fine_Steel_Plate_Leggings"
        - determine "Fine_Steel_Plate_Boots"
        - determine "Steel_Ingot"
        - determine "Smooth_Loam"
        - determine "Fine_Leather_Padding"
        }
 
    - if %quality% == Rare {
        - random 4
        - determine "The_Masters_Plan"
        - determine "Hangover"
        - determine "Hand_of_Woe"
        - determine "Jolt"
        }
 
    - if %quality% == Epic {
        - random 5
        - determine "Fabled_Journeyman_Boots"
        - determine "Shield_of_Earth"
        - determine "Midnight"
        - determine "Dread"
        - determine "Silent_Night"
        }
        
"LootTable_PoEarth_RaidMob":
    type: procedure 

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 6
      - determine "Chunk_of_Pottery"
      - determine "Sheet_of_Slate"
      - determine "Baby_Cactus"
      - determine "Block_of_Sponge"
      - determine "Human_Remains"
      - determine "Bits_of_Lead"
      }
 
    - if %quality% == Uncommon {
        - random 11
        - determine "GEM_Pearl"
        - determine "GEM_Amber"
        - determine "GEM_Pyrite"
        - determine "GEM_Shattered_Emerald"
        - determine "GEM_Quartz"
        - determine "GEM_Blue_Diamond"
        - determine "GEM_Rough_Diamond"
        - determine "GEM_Cracked_Diamond"
        - determine "Steel_Ingot"
        - determine "Smooth_Loam"
        - determine "Fine_Leather_Padding"
        }
 
    - if %quality% == Rare {
        - random 10
        - determine "The_Masters_Plan"
        - determine "Hangover"
        - determine "Hand_of_Woe"
        - determine "Jolt"
        - determine "Essence_of_Earth"
        - determine "Earthen_Temper"
        - determine "Earthen_Helm"
        - determine "Earthen_Chestpiece"
        - determine "Earthen_Leggings"
        - determine "Earthen_Boots"
        }
 
    - if %quality% == Epic {
        - random 7
        - determine "Fabled_Journeyman_Boots"
        - determine "Shield_of_Earth"
        - determine "Midnight"
        - determine "Dread"
        - determine "Silent_Night"
        - determine "Storm_Diamond"
        - determine "Orb_of_Sunlight"
        }
        
"LootTable_PoMag_IceGoblin":
    type: procedure

    script:
    - define roll <util.random.int[1].to[5000]>
    - if %roll% >= 0 && %roll% < 4000 define quality "Common"
      else if %roll% >= 4000 && %roll% < 4750 define quality "Uncommon"
      else if %roll% >= 4750 && %roll% < 4970 define quality "Rare"
      else if %roll% >= 4970 define quality "Epic"
 
    - if %quality% == Common {
      - random 1
      - determine "Jagged_Rock"
      }
 
    - if %quality% == Uncommon {
        - random 1
        - determine "Peppermint_Patty"
        }
 
    - if %quality% == Rare {
        - random 1
        - determine "Peppermint_Patty"
        }
 
    - if %quality% == Epic {
        - random 1
        - determine "Peppermint_Patty"
        }