# ========================================
# Credits Currency / Economy
# Tyler J. Sawyer
# Simon Anguish
# Last Updated: 4/22/14
# ========================================
# 
# Credits Currency
# ----------------
#
# A custom Denizen-based economy scripting protocol that allows players to
# buy, sell, and trade items to NPCs designated as the 'vendor' assignment.
#
# Item buy/sell values can be customized in the appropriate NPC assignment 
# script. 
#
# NPCs can be customized to require a certain faction in order to speak to
# a particular player.
#
# NPCs may also be assigned the 'Auction' assignment to allow players to 
# sell unique or custom items obtained through the server (such as custom 
# boss loot) to other players for credits.
#
# Credits may be used to buy (almost) all items in the game.
#
# Players can also transfer credits to one another in trade for 
# specific items using the /credit transfer amt player command.
#
# See the individual commands below for comments and details.
# ========================================
#

"CreditsInitializer":
  type: world
  events:
    on player join:
    # Credit Check - See if a player has a credit flag.
    # If not, create one and set it equal to 0.
    - if <player.flag[CURRENCY_Credits]> == "null" {
      - flag player "CURRENCY_Credits:0" }
      
"CreditsCommands":
  type: world
  events:
    on credits command:
    - narrate "<yellow>You have <player.flag[CURRENCY_Credits]> credits in your wallet."
    # Admin Commands
    # CreditAdd command.
    # /creditadd <amt> <player>
    # Gives a <player> <amt> credits.
    on creditadd command:
    - if <player.name> != "Aayrl" && <player.name> != "Jennavb13" && <player.name> != "mtotho" {
      - narrate "<red>You may not use this command."
      - queue clear
      }
    - if <context.args.get[2]> == null || <context.args.get[1]> == null {
      - narrate "<red>Invalid Syntax for <gold>/creditadd<red> command."
      - narrate "<red>Usage: <gold>/creditadd <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Adds specified amount of credits to a specified player<&sq> wallet."
      - queue clear
      }
    - if <context.args.get[2]> != null {
      - define creditAmt <math.as_int:<<context.args.get[2]>.flag[CURRENCY_Credits]>+<context.args.get[1]>> }
      - flag <context.args.get[2]> "CURRENCY_Credits:%creditAmt%"
      - narrate targets:<context.args.get[2]> "<yellow>Adding <context.args.get[1]> credits to your wallet."
      }
    # Creditsub command.
    # /creditsub <amt> <player>
    # Takes <amt> credits from <player>.
    on creditsub command:
    - if <player.name> != "Aayrl" && <player.name> != "Jennavb13" && <player.name> != "mtotho" {
      - narrate "<red>You may not use this command."
      - queue clear
      }
    - if <context.args.get[2]> == null || <context.args.get[1]> == null {
      - narrate "<red>Invalid Syntax for <gold>/creditsub<red> command."
      - narrate "<red>Usage<&co> <gold>/creditsub <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Removes specified amount of credits from a specified player<&sq> wallet."
      - queue clear
      }
    - if <context.args.get[2]> != null {
      - define creditAmt <math.as_int:<<context.args.get[2]>.flag[CURRENCY_Credits]>-<context.args.get[1]>> }
      - flag <context.args.get[2]> "CURRENCY_Credits:%creditAmt%"
      - narrate targets:<context.args.get[2]> "<yellow>Removing <context.args.get[1]> credits from your wallet."
      }
    # Creditset command.
    # /creditset <amt> <player>
    # Sets a <player> credit count to <amt>.
    on creditset command:
    - if <player.name> != "Aayrl" && <player.name> != "Jennavb13" && <player.name> != "mtotho" {
      - narrate "<red>You may not use this command."
      - queue clear
      }
    - if <context.args.get[2]> == null || <context.args.get[1]> == null {
      - narrate "<red>Invalid Syntax for <gold>/creditset<red> command."
      - narrate "<red>Usage<&co> <gold>/creditsset <green>Amount <white>PlayerName"
      - narrate "<red>Desc<&co> Sets a specified player<&sq>s wallet to the specified amount of credits."
      - queue clear
      }
    - if <context.args.get[2]> != null {
      - define creditAmt <context.args.get[1]> }
      - flag <context.args.get[2]> "CURRENCY_Credits:%creditAmt%"
      - narrate targets:<context.args.get[2]> "<yellow>Setting your wallet to %creditAmt% credits."
      }
